{
  "hash": "5ff75361e0acf0f20d5964032a77ebe0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Disease modeling\"\neditor: visual\neditor_options: \n  chunk_output_type: inline\nbibliography: references.bib\n---\n\n\n\n\n\n## Introduction\n\nAs seen in the previous chapter, plant disease modeling is a crucial tool for predicting disease dynamics and informing management decisions when integrated into decision support systems. By leveraging models, researchers and practitioners can anticipate disease outbreaks, assess potential risks, and implement timely interventions to mitigate losses [@savary2018; @rossi2010a].\n\nMathematical modeling involves representing empirical phenomena and experimental outcomes using mathematical functions. The data used for these models may be collected specifically for modeling purposes or drawn from existing experiments and observations originally conducted to address different research questions, with such data often found in the literature [@hau1990].\n\nMathematical models integrating plant, disease, and environmental - in most cases weather-based variables - factors have been developed since the mid-1900s (See recent review by @gonzález-domínguez2023 ). Dynamic modeling of disease epidemics gained traction in the early 1960s with foundational work by Vanderplank and Zadoks, setting the stage for future advancements. Since then, researchers have contributed extensively to model development, mainly focusing on the plant disease cycle which outline pathogen development stages, such as dormancy, reproduction, dispersal, and pathogenesis, driven by interactions among host, pathogen, and environmental factors [@dewolf2007].\n\nA systematic map by @fedele2022a identified over 750 papers on plant disease models, primarily aimed at understanding system interactions (n = 680). This map revealed that while most models focus on system understanding, fewer are devoted to tactical management (n = 40), strategic planning (n = 38), or scenario analysis (n = 9).\n\nIn terms of model development, we can classify the models into two main groups based on the approach taken [@gonzález-domínguez2023]: Empirical or mechanistic approaches, which differ fundamentally in their basis, complexity and application ([@fig-approaches_modeling]).\n\n**Empirical models**, which emerged in the mid-20th century, rely on data-driven statistical relationships between variables collected under varying field or controlled environments. These models often lack cause-effect understanding, making them less robust and requiring rigorous validation and calibration when applied in diverse environments, especially in regions that did not provide data for model construction. The parameters of the model change every time new data are incorporated during model development.\n\nIn contrast, **mechanistic models**, developed from a deep understanding of biological and epidemiological processes, explain disease dynamics based on known system behaviors in response to external variables---a concept-driven approach. These dynamic models quantitatively characterize the state of the pathosystem over time, offering generally more robust predictions by utilizing mathematical equations to describe how epidemics evolve under varying environmental conditions.\n\n![Steps of model development from data collection to modeling based on statistical relationships (data-driven) between data collected from field or controlled environment to mechanistic approach based on the elements of the disease cycles (concept-driven).](imgs/modeling-fig1.png){#fig-approaches_modeling fig-align=\"center\"}\n\nBoth empirical and mechanistic approaches are valid methodologies extensively used in plant pathology research. The choice between these approaches depends on several factors, including data availability, urgency in model development, and, frequently, the researcher's experience or preference. Empirical models focus on statistical relationships derived directly from data, whereas mechanistic models aim to represent the biological processes of disease progression through linked mathematical equations.\n\nIn mechanistic modeling, the equations used to predict specific disease components---such as infection frequency or the latency period---are often empirically derived from controlled experiments. For example, an infection frequency equation is typically based on data collected under specific environmental conditions, with models fitted to accurately describe observed patterns. These process-based models are then built by integrating empirically-derived equations or rules, which collectively simulate the disease cycle. Data and equations are sourced from published studies or generated from new experiments conducted by researchers.\n\nBeyond their practical predictive value, mechanistic models are valuable tools for organizing existing knowledge about a particular disease, helping to identify gaps and guide future research efforts. An example of such work is the extensive collection of comprehensive mechanistic models developed for various plant diseases by the research group led by Prof. Vittorio Rossi in Italy [@rossi2008; @rossi2014; @salotti2023; @salotti2022].\n\nThis chapter focuses mainly on empirical modeling. We begin by examining the types of data utilized in model development, focusing on those collected under controlled conditions, such as replicated laboratory or growth chamber experiments, as well as field data collected from several locations and years. We will also analyze real-world case studies, drawing on examples from the literature to replicate and understand model applications. Through these examples, we aim to illustrate the process of fitting models to data and underscore the role of modeling in advancing plant disease management practices.\n\n## Controlled environment\n\nIn this section, we will demonstrate, using examples from the literature, how statistical models can be fitted to data that represent various stages of the disease cycle.\n\nResearch on disease-environment interactions under controlled conditions - such as laboratory or growth chamber studies - lays the groundwork for building foundational models, including infection-based models and sub-models for specific processes like dormancy, dispersal, infection, and latency [@krause1975; @magarey2005; @dewolf2007].\n\nGrowth chambers and phytotrons are essential for testing the effects of individual variables, though these controlled results may not fully replicate field conditions. Anyway, laboratory experiments help clarify specific questions by isolating interactions, unlike complex field trials where host, pathogen, and environment factors interact. Polycyclic or \"mini epidemic\" experiments enable observation of disease dynamics under targeted conditions [@hau1990; @rotem1988].\n\nOnce developed, these sub-models can be incorporated into larger mechanistic models that simulate the entire disease cycle, thereby mimicking disease progression over time [@rossi2008; @salotti2023]. Alternatively, sub-models can also be used in stand-alone predictive systems where the process being modeled - such as infection - is the key factor in determining disease occurrence [@machardy1989]. For example, infection sub-models can be integrated into prediction systems that help schedule crop protection measures by forecasting when infection risk is highest.\n\n### Infection-based models\n\n#### Generalized beta-function\n\nAmong several non-linear models that can be fitted to infection responses to temperature, the generalized beta-function is an interesting alternative [@hau1990]. This is a nonlinear model with five parameters. Two of them, namely $b$ and $c$ , have a biological meaning because they are estimates of the minimum and maximum temperature of the biological process under consideration.\n\nWe will use a subset of the data obtained from a study conducted under controlled conditions that aimed to assess the influence of temperature on the symptom development of citrus canker in sweet orange [@dallapria2006]. The data used here is only for severity on the cultivar Hamlin.The data was extracted using the R package digitize as shown [here on this tweet](https://twitter.com/edelponte/status/1580320409794539520?s=20&t=KqjJPmwzFVKm8Gu7Ss-P6A).\n\nLet's enter the data manually. Where $t$ is the temperature and $y$ is the severity on leaves.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- tibble::tribble(\n  ~t, ~y,\n12.0, 0.00,\n15.0, 0.1,\n20.0, 0.5,\n25.0, 1.2,\n30.0, 1.5,\n35.0, 1.2,\n40.0, 0.1\n)\n```\n:::\n\n\n\n\n\nFit the Beta generalized model [@hau1990]. The model can be written as:\n\n$$\ny = a*((t - b )^d)*((c - t)^e)\n$$\n\nwhere $b$ and $c$ represent minimum and maximum temperatures, respectively, for the development of the disease, $a$, $d$ and $e$ are parameters to be estimated, $t$ is the temperature and $y$ is disease severity. We need the {minpack.lm} library to avoid parameterization issues.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(minpack.lm)\nfit_temp <- nlsLM(\n  y ~ a * ((t - b) ^ d) * ((c - t) ^ e),\n  start = list(\n    a = 0,\n    b = 10,\n    c = 40,\n    d = 1.5,\n    e = 1\n  ),\n  algorithm = \"port\",\n  data = temp\n)\nsummary(fit_temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFormula: y ~ a * ((t - b)^d) * ((c - t)^e)\n\nParameters:\n   Estimate Std. Error t value Pr(>|t|)    \na  0.001303   0.006295   0.207    0.855    \nb 11.999999   4.875414   2.461    0.133    \nc 40.137236   0.346763 115.748 7.46e-05 ***\nd  1.760101   1.193017   1.475    0.278    \ne  0.830868   0.445213   1.866    0.203    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1121 on 2 degrees of freedom\n\nAlgorithm \"port\", convergence message: Relative error between `par' and the solution is at most `ptol'.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(modelr)\nmodelr::rsquare(fit_temp, temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9898275\n```\n\n\n:::\n:::\n\n\n\n\n\nStore the model parameters in objects.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_temp$m$getAllPars()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          a           b           c           d           e \n 0.00130259 11.99999931 40.13723602  1.76010097  0.83086798 \n```\n\n\n:::\n\n```{.r .cell-code}\na <- fit_temp$m$getAllPars()[1]\nb <- fit_temp$m$getAllPars()[2]\nc <- fit_temp$m$getAllPars()[3]\nd <- fit_temp$m$getAllPars()[4]\ne <- fit_temp$m$getAllPars()[5]\n```\n:::\n\n\n\n\n\nCreate a data frame for predictions at each temperature unit from 10 to 45 degree Celsius.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt <- seq(10, 45, 0.1)\ny <- a * ((t - b) ^ d) * ((c - t) ^ e)\ndat <- data.frame(t, y)\n```\n:::\n\n\n\n\n\nPlot the observed and predicted data using {ggplot2} package.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(r4pde)\ndat |>\n  ggplot(aes(t, y)) +\n  geom_line() +\n  geom_point(data = temp, aes(t, y)) +\n  theme_r4pde(font_size = 16) +\n  labs(x = \"Temperature\", y = \"Severity\")\n```\n\n::: {.cell-output-display}\n![](prediction-disease-modeling_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}