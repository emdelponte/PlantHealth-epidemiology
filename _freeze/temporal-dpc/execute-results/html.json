{
  "hash": "6bf68c4fd7499a9810450ca339764e78",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n\n\n# Disease progress curves\n\n## How epidemics occur\n\nBefore knowing how epidemics develop in time, it is important to understand how an epidemic occur. An epidemic begins when the **primary inoculum** (a variable number of propagules able to infect the plant) that is *surviving* somewhere establishes an intimate contact with individuals of the host population - this process is called *infection*. These inocula are usually surviving externally to the plant host and need to *disperse* (move), passively or by means of a vector, to reach the plant. It can also be that a growing host encounter a localized (static) source of inoculum.\n\nOnce the infection is established, the pathogen *colonizes* the plant tissues and disease symptoms are noticed. When this happens, the **incubation period** can be measured in time units. A successful colonization will lead to *reproduction* of the pathogen inside and/or external to the crop, and so the **latent period** is completed, and can also be measure in time units. Finally, the **infectious period** takes place and continues until the pathogen is not capable of producing the **secondary inoculum** on the infected site.\n\n\n\n\n\n\n\n\n\n\n\n```{mermaid}\n%%| label: fig-diagram\n%%| fig-cap: \"Five main processes of the disease cycle\"\n\nflowchart\n  A[Infection] --> B[Colonization]\n  B --> C[Reproduction]\n  C -. New inoculum .-> D[Dispersal]\n  E[Survival] -- Primary inoculum --> D\n  D  --> A\n  D  -.-> A\n  C --> E \n```\n\n\n\n\n\n\n\n\n\n\n\nEpidemiologists are generally interested in determining the length of the incubation, latent, and infectious periods as influenced by factors related to the host, pathogen, or environment. This is relevant because the longer it takes for the completion of the incubation and latent periods, the lower the potential number of repeated cycles. In summary, a single \"infection cycle\" represents all events that occur from infection to dispersal, and this occurs only once for many diseases, while for others there may be multiple cycles, which are defined as an \"infection chain.\"\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(r4pde)\nperiods <- tibble::tribble(\n  ~period, ~length, ~color, ~order,\n  \"Incubation\", 10, 0, 1,\n  \"Latent\" , 15, 0, 2,\n  \"Infectious\", 25, 15, 3\n)\n\np <- periods |> \n  ggplot(aes(reorder(period, order), length, fill = period))+\n  geom_col()+\n  geom_col(aes(period, color), color = \"white\", fill = \"white\")+\n  coord_flip()+\n  theme_void()+\n  theme(legend.position = \"none\")+\n  annotate(geom = \"text\", x = 0.5, y = 15, label = \"----- Time --->\")+\n  annotate(geom = \"text\", x = 1, y = 5, label = \"Incubation\", color = \"white\")+\n  annotate(geom = \"text\", x = 2, y = 8, label = \"Latent\", color = \"white\")+\n  annotate(geom = \"text\", x = 3, y = 20, label = \"Infectious\", color = \"white\")+\n  annotate(geom = \"text\", x = 1, y = 10.5, label = \"Visible symptoms\", angle = 90, size = 1.7)+\n  annotate(geom = \"text\", x = 2, y = 15.5, label = \"Reproduction starts\", angle = 90, size =1.7)+\n  annotate(geom = \"text\", x = 3, y = 25.5, label = \"Reproduction ends\", angle = 90, size =1.7)+\n  scale_fill_manual(values = c(\"darkgreen\",  \"brown\", \"darkorange\"))+\n  geom_segment(mapping=aes(x=0.6, y=0, xend=0.6, yend=10), arrow=arrow(ends='both'), size=1, color = \"black\")+ \n  geom_segment(mapping=aes(x=1.6, y=0, xend=1.6, yend=15), arrow=arrow(ends='both'), size=1, color = \"black\")  +\n   geom_segment(mapping=aes(x=2.6, y=15, xend=2.6, yend=25), arrow=arrow(ends='both'), size=1, color = \"black\") \n  library(png)\n  library(cowplot)\n  incubation <- readPNG(\"imgs/incubation3.png\", native = TRUE)\n  latent <- readPNG(\"imgs/latent3.png\", native = TRUE)\n  p2 <- p + draw_image(incubation , x = 0.5, y = 13, scale = 5)+\n    draw_image(latent , x = 1.5, y = 20, scale = 5)\n  ggsave(\"imgs/periods.png\", width =6, height =2, bg = \"white\")  \n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n![Three time-related epidemiological periods and their relations with stages of the disease cycle including colonization (symptoms) and reproduction (sporulation in the case of fungi). Drawings of apple scab symptoms and signs adapted from Agrios (2005)](imgs/periods.png){#fig-periods fig-align=\"center\"}\n\n## Disease curves\n\nA key understanding of the epidemics relates to the knowledge of rates and patterns. Epidemics can be viewed as dynamic systems that change their state as time goes. The first and simplest way to characterize such changes in time is to produce a graphical plot called disease progress curve (DPC). This curve can be obtained as long as the intensity of the disease (*y*) in the host population is assessed sequentially in time (*t*).\n\nA DPC summarizes the interaction of the three main components of the disease triangle occurring during the epidemic. The curves can vary greatly in shape according to variations in each of the components, in particular due to management practices that alter the course of the epidemics and for which the goal is to stop disease increase. We can create a data frame in R for a single DPC and make a plot using ggplot. By convention we use `t` for time and `y` for disease intensity, expressed in percentage (0 to 100%).\n\nFirstly, let's load the essential R packages and set up the environment.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # essential packages \ntheme_set(theme_r4pde()) # set global theme\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nThere are several ways to create a data frame in R. I like to use the `tribble` function as below. The entered data will be assigned to a dataframe called `dpc`.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndpc <- \n  tribble(\n   ~t,  ~y, \n   0,  0.1, \n   7,  1, \n  14,  9, \n  21,  25, \n  28,  80, \n  35, 98, \n  42, 99, \n  49, 99.9\n  )\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\nNow the plot\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndpc1 <- dpc |>\n  ggplot(aes(t, y)) +\n  theme_r4pde()+\n  geom_line(size = 1)+\n  geom_point(size = 3, shape = 16)+\n  labs(x = \"Assessment time (days)\",\n       y = \"Disease intensity (%)\")\n\nggsave(\"imgs/dpc1.png\", dpc1)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n![A typical disease progress curve for an epidemic that reaches the maximum value](imgs/dpc1.png){#fig-dpc1}\n\n## Epidemic classification\n\nVanderplank analysed the shapes of great number of epidemic curves and classified the epidemics into two basic types: monocyclic or polycyclic [@plantdi1963]. In **monocyclic** epidemics, inoculum capable of infecting the crop is not produced during the epidemics. These epidemics are initiated and maintained only by the primary inoculum. There is no secondary infection and hence no further spread of newly produced inoculum among the host individuals. Tipically, the progress curves for monocyclic epidemics have a saturation type shape. An example of a monocyclic epidemic is the disease known as wheat smut caused by *Tilletia caries*. In this disease, although two types of spores are produced during a single cycle (teliospores and basidiospores), no additional infection cycles occur within the same growing season.\n\nConversely, when the secondary inoculum produced during the epidemics is capable of infecting the host during the same crop cycle, a **polycyclic** epidemic is established. The number of repeated cycles just depends on how long it takes to complete a single infection cycle. These epidemics most commonly present a sigmoid shape @fig-cycles. An example of a polycyclic epidemic is soybean rust as it undergoes repeated infection cycles with uredospores on soybean.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\ntheme_set(theme_bw(base_size = 16))\n\nlibrary(epifitter)\npolyc <- sim_logistic(N = 50, dt = 5, \n                      y0 = 0.01, r = 0.2, \n                      K = 0.8, n = 1, \n                      alpha =0)\n\np <- polyc |> \n  ggplot(aes(time, y))+\n  geom_point(aes(time, y), size =19, shape =1)+\n  geom_line()+\n  ylim(0,1)+\n  theme_r4pde()+\n  labs(x = \"Time\", y = \"Disease intensity\")\n\n\nmonoc <- sim_monomolecular(N = 50, dt = 5, \n                           y0 = 0.01, r = 0.1,\n                           K = 0.8, n = 1, \n                           alpha =0)\nlibrary(ggforce)\nm <- monoc |> \n  ggplot(aes(time, y))+\n  geom_point(aes(x = 25, y = 0.5), size =90, shape = 1)+\n   geom_line()+\n theme_r4pde()+\n  ylim(0,1)+\n  labs(x = \"Time\", y = \"Disease intensity\")\n\nlibrary(patchwork)\ncycles <- m | p\nggsave(\"imgs/cycles.png\", bg = \"white\", width = 8, height =4)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n![Hypothetical curves for monocyclic (left) and polycyclic (right) epidemics. Each circle represents a single infection cycle.](imgs/cycles.png){#fig-cycles fig-align=\"center\"}\n\n## Curve descriptors and AUDPC\n\nThe depiction and analysis of disease progress curves can provide useful information for gaining understanding of the underlying epidemic process. The curves are extensively used to evaluate how disease control measures affect epidemics. When characterizing DPCs, a researcher may be interested in describing and comparing epidemics that result from different treatments, or simply in their variations as affected by changes in environment, host or pathogen.\n\nThe precision and complexity of the analysis of progress curve data depends on the objective of the study. In general, the goal is to synthesize similarities and differences among epidemics based on common descriptors of the disease progress curves. For example, the simple appraisal of the disease intensity at any time during the course of the epidemic should be sufficient for certain situations. Furthermore, a few quantitative and qualitative descriptors can be extracted including:\n\n-   Epidemic duration\n-   Maximum disease\n-   Curve shape\n-   Area under the area under the disease progress curve (AUDPC).\n\nLet's visualize the AUDPC in the same plot that we produced above.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndpc2 <- dpc |>\n  ggplot(aes(t, y)) +\n  labs(x = \"Assessment time (days)\",\n       y = \"Disease intensity (%)\")+\n    geom_area(fill = \"#339966\")+\n    geom_line(linewidth = 1)+\n  theme_r4pde()+\n  geom_point(size = 3, shape = 16)+\n  scale_x_continuous(breaks = c(0, 7, 14, 21, 28, 35, 42))\nggsave(\"imgs/dpc2.png\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n![Representation of the area under the disease progress curve](imgs/dpc2.png){#fig-audpc2 fig-align=\"center\"}\n\nThe AUDPC summarizes the \"total measure of disease stress\" and is largely used to compare epidemics [@jeger2001]. The most common approach to calculate AUDPC is the trapezoidal method, which splits the disease progress curves into a series of rectangles, calculating the area of each of them and then summing the areas. Let's extend the plot code to show those rectangles using the `annotate` function.\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndpc3 <- dpc |>\n  ggplot(aes(t, y)) +\n  theme_r4pde()+\n  labs(x = \"Assessment time (days)\",\n       y = \"Disease intensity (%)\")+\n  annotate(\"rect\", xmin = dpc$t[1], xmax = dpc$t[2], \n           ymin = 0, ymax = (dpc$y[1]+ dpc$y[2])/2, \n           color = \"white\", fill = \"#339966\")+\n   annotate(\"rect\", xmin = dpc$t[2], xmax = dpc$t[3], \n            ymin = 0, ymax = (dpc$y[2]+ dpc$y[3])/2, \n            color = \"white\", fill = \"#339966\")+\n   annotate(\"rect\", xmin = dpc$t[3], xmax = dpc$t[4], \n            ymin = 0, ymax = (dpc$y[3]+ dpc$y[4])/2,\n            color = \"white\", fill = \"#339966\")+\n   annotate(\"rect\", xmin = dpc$t[4], xmax = dpc$t[5], \n            ymin = 0, ymax = (dpc$y[4]+ dpc$y[5])/2, \n            color = \"white\", fill = \"#339966\")+\n   annotate(\"rect\", xmin = dpc$t[5], xmax = dpc$t[6], \n            ymin = 0, ymax = (dpc$y[5]+ dpc$y[6])/2, \n            color = \"white\",fill = \"#339966\")+\n   annotate(\"rect\", xmin = dpc$t[6], xmax = dpc$t[7], \n            ymin = 0, ymax = (dpc$y[6]+ dpc$y[7])/2, \n            color = \"white\", fill = \"#339966\")+\n  annotate(\"rect\", xmin = dpc$t[7], xmax = dpc$t[8], \n            ymin = 0, ymax = (dpc$y[7]+ dpc$y[8])/2, \n            color = \"white\", fill = \"#339966\")+\n  geom_line(linewidth = 1)+\n  geom_point(size = 3, shape = 16)+\n  annotate(geom = \"text\", x = 36.5, y = 50,\n           label = \"AUDPC = 2534\" , size = 4)+\n  scale_x_continuous(breaks = c(0, 7, 14, 21, 28, 35, 42, 49))\nggsave(\"imgs/dpc3.png\")\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n![Representation of the area under the disease progress curve calculated using the trapezoidal method](imgs/dpc3.png){#fig-dpc3 fig-align=\"center\"}\n\nIn R, we can obtain the AUDPC for the DPC we created earlier using the `AUDPC` function offered by the *epifitter* package. Because we are using the percent data, we need to set the argument `y_proportion = FALSE`. The function returns the absolute AUDPC. If one is interested in relative AUDPC, the argument `type` should be set to `\"relative\"`. There is also the alternative to AUDPC, the area under the disease progress stairs (AUDPS) [@simko2012].\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epifitter)\nAUDPC(dpc$t, dpc$y, \n      y_proportion = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2534\n```\n\n\n:::\n\n```{.r .cell-code}\n# The relative AUDPC \nAUDPC(dpc$t, dpc$y, \n      y_proportion = FALSE, \n      type = \"relative\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5171429\n```\n\n\n:::\n\n```{.r .cell-code}\n# To calculate AUDPS, the alternative to AUDPC\nAUDPS(dpc$t, dpc$y, \n      y_proportion = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2884\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}